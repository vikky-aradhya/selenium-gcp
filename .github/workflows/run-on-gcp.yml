name: Run Selenium Tests on GCP VM

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Tests on GCP via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd selenium-gcp
            git pull origin main
            mvn clean test

      - name: Upload Extent Report and Generate Signed URL
        run: |
          echo "${{ secrets.GCP_SIGNER_KEY_BASE64 }}" | base64 -d > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project selenium-testing-lab
          
          if [ -f test-output/ExtentReport.html ]; then
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            gsutil cp test-output/ExtentReport.html gs://selenium-test-reports/reports/ExtentReport_$TIMESTAMP.html
            echo "https://storage.cloud.google.com/selenium-test-reports/reports/ExtentReport_$TIMESTAMP.html" > report-url.txt
          else
            echo "Report not found" > report-url.txt
          fi

      - name: Send Email Notification
        if: always()
        run: |
          STATUS="✅ Passed"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="❌ Failed"
          fi

          REPORT_LINK=$(cat report-url.txt)
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")

          cat <<EOF > email.txt
From: Selenium Tests <${{ secrets.EMAIL_USER }}>
To: ${{ secrets.EMAIL_TO }}
Subject: Selenium Test Report - $STATUS

Status: $STATUS
Report: $REPORT_LINK
Timestamp: $TIMESTAMP
EOF

          curl -s --url "smtps://smtp.gmail.com:465" --ssl-reqd \
            --mail-from "${{ secrets.EMAIL_USER }}" \
            --mail-rcpt "${{ secrets.EMAIL_TO }}" \
            --upload-file email.txt \
            --user "${{ secrets.EMAIL_USER }}:${{ secrets.EMAIL_PASSWORD }}"
